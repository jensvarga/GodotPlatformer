[gd_scene load_steps=11 format=2]

[ext_resource path="res://Sprites/HypTextures/hyp__texture_005.png" type="Texture" id=1]
[ext_resource path="res://Transition.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float circle_size : hint_range(0,1) = 0.5f;

void fragment(){
	if (distance(vec2(0.5,0.5), UV) < circle_size){
		COLOR.a = 0.0f;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/circle_size = 0.0

[sub_resource type="Animation" id=3]
resource_name = "ExitLevel"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=10]
resource_name = "Pixelate"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect2:material:shader_param/pixel_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 300.0, 100.0 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "pixelation_completed"
} ]
}

[sub_resource type="Animation" id=4]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ColorRect2:material:shader_param/pixel_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 300.0 ]
}

[sub_resource type="Animation" id=7]
resource_name = "StartLevel"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

// Exposed uniform variable for pixel size
uniform float pixel_size = 8.0; // Default pixel size

void fragment() {
    // Get the screen texture
    vec2 screen_uv = SCREEN_UV;

    // Quantize the UV coordinates to create the pixelation effect
    vec2 pixelated_uv = floor(screen_uv * pixel_size) / pixel_size;

    // Sample the screen texture at the pixelated UV coordinates
    vec4 color = texture(SCREEN_TEXTURE, pixelated_uv);

    // Set the output color
    COLOR = color;
}
"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/pixel_size = 100.0

[node name="Transition" type="CanvasLayer"]
script = ExtResource( 2 )

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -4.0
margin_top = -99.0
margin_right = 11.0
margin_bottom = 95.0
color = Color( 0.109804, 0.101961, 0.101961, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
reset_on_save = false
anims/ExitLevel = SubResource( 3 )
anims/Pixelate = SubResource( 10 )
anims/RESET = SubResource( 4 )
anims/StartLevel = SubResource( 7 )

[node name="HypTexture005" type="Sprite" parent="."]
visible = false
position = Vector2( 243, 137 )
texture = ExtResource( 1 )

[node name="ColorRect2" type="ColorRect" parent="."]
visible = false
material = SubResource( 9 )
anchor_right = 1.0
anchor_bottom = 1.0

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
[connection signal="animation_started" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_started"]
