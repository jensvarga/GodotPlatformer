[gd_scene load_steps=15 format=2]

[ext_resource path="res://MainMenu.gd" type="Script" id=1]
[ext_resource path="res://MenuTheme.tres" type="Theme" id=2]
[ext_resource path="res://Sprites/UI/OQ_Logo.png" type="Texture" id=3]
[ext_resource path="res://Sprites/UI/main_menu_bg-pixelicious.png" type="Texture" id=4]
[ext_resource path="res://Sprites/CinematicCharacters/Cliff_Scene5.png" type="Texture" id=5]
[ext_resource path="res://Sprites/CinematicCharacters/Horus_adult.png" type="Texture" id=6]
[ext_resource path="res://Sprites/CinematicCharacters/Scene6_clouds.png" type="Texture" id=7]
[ext_resource path="res://ScrollingParallaxLayer.gd" type="Script" id=8]
[ext_resource path="res://Sprites/UI/arrows.png" type="Texture" id=9]

[sub_resource type="Shader" id=2]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = 0.3;
uniform float position = 0.3;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.24;
uniform float falloff : hint_range(0.0, 1.0) = 0.6;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.2;

uniform float speed = 1.0;
uniform float ray1_density = 10.0;
uniform float ray2_density = 50.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.5;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.6, 0.8);

uniform bool hdr = false;
uniform float seed = 9.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/angle = 0.3
shader_param/position = 0.3
shader_param/spread = 0.5
shader_param/cutoff = 0.24
shader_param/falloff = 0.6
shader_param/edge_fade = 0.2
shader_param/speed = 1.0
shader_param/ray1_density = 10.0
shader_param/ray2_density = 50.0
shader_param/ray2_intensity = 0.5
shader_param/color = Color( 1, 0.9, 0.6, 0.8 )
shader_param/hdr = false
shader_param/seed = 9.0

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 200, 200 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 6 )
region = Rect2( 200, 0, 200, 200 )

[sub_resource type="SpriteFrames" id=6]
animations = [ {
"frames": [ SubResource( 4 ), SubResource( 5 ) ],
"loop": true,
"name": "default",
"speed": 2.0
} ]

[node name="MainMenu" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
sky_color = Color( 0.121569, 0.121569, 0.121569, 1 )

[node name="AspectRatioContainer2" type="AspectRatioContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ParallaxBackground" type="ParallaxBackground" parent="AspectRatioContainer2"]

[node name="ParallaxLayer" type="ParallaxLayer" parent="AspectRatioContainer2/ParallaxBackground"]
motion_mirroring = Vector2( 632, 0 )
script = ExtResource( 8 )
scroll_speed = 20.0

[node name="Sprite" type="Sprite" parent="AspectRatioContainer2/ParallaxBackground/ParallaxLayer"]
position = Vector2( 140, 46 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 632, 87 )

[node name="Sprite2" type="Sprite" parent="AspectRatioContainer2/ParallaxBackground/ParallaxLayer"]
position = Vector2( 772, 46 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 632, 87 )

[node name="ParallaxLayer2" type="ParallaxLayer" parent="AspectRatioContainer2/ParallaxBackground"]
motion_mirroring = Vector2( 632, 0 )
script = ExtResource( 8 )
scroll_speed = 50.0

[node name="Sprite" type="Sprite" parent="AspectRatioContainer2/ParallaxBackground/ParallaxLayer2"]
position = Vector2( 90, 123 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 632, 87 )

[node name="Sprite2" type="Sprite" parent="AspectRatioContainer2/ParallaxBackground/ParallaxLayer2"]
position = Vector2( 722, 123 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 632, 87 )

[node name="ParallaxLayer3" type="ParallaxLayer" parent="AspectRatioContainer2/ParallaxBackground"]
motion_mirroring = Vector2( 632, 0 )
script = ExtResource( 8 )
scroll_speed = 70.0

[node name="Sprite" type="Sprite" parent="AspectRatioContainer2/ParallaxBackground/ParallaxLayer3"]
position = Vector2( 51, 202 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 632, 87 )

[node name="Sprite2" type="Sprite" parent="AspectRatioContainer2/ParallaxBackground/ParallaxLayer3"]
position = Vector2( 683, 202 )
scale = Vector2( 2, 2 )
texture = ExtResource( 7 )
region_rect = Rect2( 0, 0, 632, 87 )

[node name="Sprite" type="Sprite" parent="AspectRatioContainer2"]
visible = false
position = Vector2( 242.453, 137.5 )
scale = Vector2( 1.09766, 1.09766 )
texture = ExtResource( 4 )

[node name="GodRays" type="Sprite" parent="AspectRatioContainer2"]
visible = false
material = SubResource( 3 )
position = Vector2( 242.453, 137.5 )
scale = Vector2( 1.09766, 1.09766 )
texture = ExtResource( 4 )

[node name="Characters" type="Node2D" parent="AspectRatioContainer2"]
modulate = Color( 0.121569, 0.121569, 0.121569, 1 )

[node name="Cliff" type="Sprite" parent="AspectRatioContainer2/Characters"]
position = Vector2( 211, 331 )
scale = Vector2( 2.34686, 2.34686 )
texture = ExtResource( 5 )

[node name="Horus" type="AnimatedSprite" parent="AspectRatioContainer2/Characters"]
position = Vector2( 257, 143 )
scale = Vector2( 1.09123, 1.09123 )
frames = SubResource( 6 )
frame = 1
playing = true

[node name="ControlsImage" type="Sprite" parent="."]
visible = false
position = Vector2( 315, 133 )
texture = ExtResource( 9 )

[node name="AspectRatioContainer" type="AspectRatioContainer" parent="."]
anchor_left = 0.2
anchor_top = 0.15
anchor_right = 0.2
anchor_bottom = 0.15
margin_right = 40.0
margin_bottom = 40.0

[node name="Logo" type="Sprite" parent="AspectRatioContainer"]
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 3 )

[node name="CPUParticles2D" type="CPUParticles2D" parent="."]
position = Vector2( 245, 186 )
amount = 100
lifetime = 100.0
randomness = 1.0
lifetime_randomness = 1.0
fixed_fps = 60
emission_shape = 1
emission_sphere_radius = 128.0
direction = Vector2( 0, -1 )
spread = 180.0
gravity = Vector2( 0, 2 )
initial_velocity = 20.0
initial_velocity_random = 1.0
damping = 3.58
damping_random = 1.0
scale_amount = 2.0
scale_amount_random = 1.0
color = Color( 1, 0.247059, 0.247059, 1 )
hue_variation = -0.01
hue_variation_random = 1.0

[node name="MarginContainer" type="MarginContainer" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 33.0
margin_top = -150.0
margin_right = 127.0

[node name="Control" type="Control" parent="MarginContainer"]
margin_right = 94.0
margin_bottom = 150.0
theme = ExtResource( 2 )

[node name="Hbox" type="HBoxContainer" parent="MarginContainer/Control"]
anchor_top = -0.189
anchor_right = 2.46
anchor_bottom = 1.0
margin_left = -5.0
margin_top = -4.65
margin_right = 186.76
margin_bottom = 3.0

[node name="Vbox" type="VBoxContainer" parent="MarginContainer/Control/Hbox"]
margin_right = 129.0
margin_bottom = 186.0

[node name="Continue" type="Button" parent="MarginContainer/Control/Hbox/Vbox"]
margin_right = 129.0
margin_bottom = 25.0
focus_neighbour_top = NodePath("../Exit")
focus_neighbour_bottom = NodePath("../NewGame")
focus_next = NodePath("../Options")
focus_previous = NodePath("../Exit")
disabled = true
keep_pressed_outside = true
text = "Continue"

[node name="NewGame" type="Button" parent="MarginContainer/Control/Hbox/Vbox"]
margin_top = 29.0
margin_right = 129.0
margin_bottom = 54.0
focus_neighbour_top = NodePath("../Continue")
focus_neighbour_bottom = NodePath("../Options")
focus_next = NodePath("../Options")
focus_previous = NodePath("../Continue")
keep_pressed_outside = true
text = "New Game"

[node name="Options" type="Button" parent="MarginContainer/Control/Hbox/Vbox"]
margin_top = 58.0
margin_right = 129.0
margin_bottom = 83.0
focus_neighbour_top = NodePath("../NewGame")
focus_neighbour_bottom = NodePath("../Exit")
focus_next = NodePath("../Exit")
focus_previous = NodePath("../Continue")
text = "Options"

[node name="Exit" type="Button" parent="MarginContainer/Control/Hbox/Vbox"]
margin_top = 87.0
margin_right = 129.0
margin_bottom = 112.0
focus_neighbour_top = NodePath("../Options")
focus_neighbour_bottom = NodePath("../Continue")
focus_next = NodePath("../Continue")
focus_previous = NodePath("../Options")
text = "Exit"

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/Control/Hbox"]
margin_left = 133.0
margin_right = 350.0
margin_bottom = 186.0
custom_constants/separation = 0

[node name="FullscreenHbox" type="HBoxContainer" parent="MarginContainer/Control/Hbox/VBoxContainer"]
margin_right = 217.0
margin_bottom = 32.0
alignment = 2

[node name="Fullscreen" type="Button" parent="MarginContainer/Control/Hbox/VBoxContainer/FullscreenHbox"]
margin_left = 37.0
margin_right = 181.0
margin_bottom = 32.0
focus_neighbour_top = NodePath("../../Back")
focus_neighbour_bottom = NodePath("../../MusicHBox/Music")
focus_next = NodePath("../../MusicHBox/Music")
focus_previous = NodePath("../../Back")
text = "Fullscreen"

[node name="CheckBox" type="CheckBox" parent="MarginContainer/Control/Hbox/VBoxContainer/FullscreenHbox"]
margin_left = 185.0
margin_right = 217.0
margin_bottom = 32.0
pressed = true

[node name="MusicHBox" type="HBoxContainer" parent="MarginContainer/Control/Hbox/VBoxContainer"]
margin_top = 32.0
margin_right = 217.0
margin_bottom = 64.0
alignment = 2

[node name="Music" type="Button" parent="MarginContainer/Control/Hbox/VBoxContainer/MusicHBox"]
margin_left = 35.0
margin_right = 181.0
margin_bottom = 32.0
focus_neighbour_top = NodePath("../../FullscreenHbox/Fullscreen")
focus_neighbour_bottom = NodePath("../../FxHBox/Fx")
focus_next = NodePath("../../FxHBox/Fx")
focus_previous = NodePath("../../FullscreenHbox/Fullscreen")
text = "Mute Music"

[node name="CheckBox" type="CheckBox" parent="MarginContainer/Control/Hbox/VBoxContainer/MusicHBox"]
margin_left = 185.0
margin_right = 217.0
margin_bottom = 32.0

[node name="FxHBox" type="HBoxContainer" parent="MarginContainer/Control/Hbox/VBoxContainer"]
margin_top = 64.0
margin_right = 217.0
margin_bottom = 96.0
alignment = 2

[node name="Fx" type="Button" parent="MarginContainer/Control/Hbox/VBoxContainer/FxHBox"]
margin_right = 181.0
margin_bottom = 32.0
focus_neighbour_top = NodePath("../../MusicHBox/Music")
focus_neighbour_bottom = NodePath("../../ControlsButton")
focus_next = NodePath("../../ControlsButton")
focus_previous = NodePath("../../MusicHBox/Music")
text = "Mute Effects"

[node name="CheckBox" type="CheckBox" parent="MarginContainer/Control/Hbox/VBoxContainer/FxHBox"]
margin_left = 185.0
margin_right = 217.0
margin_bottom = 32.0

[node name="ControlsButton" type="Button" parent="MarginContainer/Control/Hbox/VBoxContainer"]
margin_top = 96.0
margin_right = 217.0
margin_bottom = 121.0
focus_neighbour_top = NodePath("../FxHBox/Fx")
focus_neighbour_bottom = NodePath("../Back")
focus_next = NodePath("../Back")
focus_previous = NodePath("../FxHBox/Fx")
text = "Controls"

[node name="Back" type="Button" parent="MarginContainer/Control/Hbox/VBoxContainer"]
margin_top = 121.0
margin_right = 217.0
margin_bottom = 146.0
focus_neighbour_top = NodePath("../FxHBox/Fx")
focus_neighbour_bottom = NodePath("../FullscreenHbox/Fullscreen")
focus_next = NodePath("../FullscreenHbox/Fullscreen")
focus_previous = NodePath("../FxHBox/Fx")
text = "Back"

[connection signal="pressed" from="MarginContainer/Control/Hbox/Vbox/Continue" to="." method="_on_Play_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/Vbox/NewGame" to="." method="_on_Play_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/Vbox/Options" to="." method="_on_Options_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/Vbox/Exit" to="." method="_on_Exit_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/VBoxContainer/FullscreenHbox/Fullscreen" to="." method="_on_Fullscreen_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/VBoxContainer/MusicHBox/Music" to="." method="_on_Music_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/VBoxContainer/FxHBox/Fx" to="." method="_on_Fx_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/VBoxContainer/ControlsButton" to="." method="_on_ControlsButton_pressed"]
[connection signal="pressed" from="MarginContainer/Control/Hbox/VBoxContainer/Back" to="." method="_on_Back_pressed"]
