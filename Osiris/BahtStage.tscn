[gd_scene load_steps=21 format=2]

[ext_resource path="res://Levels/Level.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/big_stone_block.png" type="Texture" id=2]
[ext_resource path="res://LevelEventsBaht.gd" type="Script" id=3]
[ext_resource path="res://Sprites/Backgrounds/Hierakonpolis_bg.png" type="Texture" id=4]
[ext_resource path="res://Sprites/Backgrounds/beach_mountains_bg1.png" type="Texture" id=5]
[ext_resource path="res://Sprites/Backgrounds/OsirisMurial_bg.png" type="Texture" id=6]
[ext_resource path="res://sonic-robo-blast-2-v22-1x.png" type="Texture" id=7]
[ext_resource path="res://Sprites/UI/evil_ankh.png" type="Texture" id=8]
[ext_resource path="res://Sprites/HypTextures/hyp_texture_001.png" type="Texture" id=9]
[ext_resource path="res://HypTexture.gd" type="Script" id=10]
[ext_resource path="res://Pen15.tscn" type="PackedScene" id=16]

[sub_resource type="ConvexPolygonShape2D" id=1]
points = PoolVector2Array( 0, 0, 32, 0, 32, 32, 0, 32 )

[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 0, 0, 32, 0, 32, 32, 0, 32 )

[sub_resource type="ConvexPolygonShape2D" id=3]
points = PoolVector2Array( 0, 0, 32, 0, 32, 32, 0, 32 )

[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( 0, 0, 32, 0, 32, 32, 0, 32 )

[sub_resource type="TileSet" id=5]
0/name = "big_stone_block.png 0"
0/texture = ExtResource( 2 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 64, 64 )
0/tile_mode = 2
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 32, 32 )
0/autotile/spacing = 0
0/autotile/occluder_map = [  ]
0/autotile/navpoly_map = [  ]
0/autotile/priority_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape = SubResource( 1 )
0/shape_one_way = false
0/shape_one_way_margin = 1.0
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 1 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 3 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 4 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform float speed = 1.0;  // Speed of the aurora motion
uniform float intensity = 3.0;  // Intensity of the wave distortion
uniform vec4 color1 : hint_color = vec4(0.1, 0.6, 0.3, 1.0);  // Main aurora color (color picker)
uniform vec4 color2 : hint_color = vec4(0.0, 0.3, 0.7, 1.0);  // Secondary aurora color (color picker)
uniform vec4 color3 : hint_color = vec4(0.7, 0.0, 0.7, 1.0);  // Highlight aurora color (color picker)
uniform sampler2D noise_texture;  // Noise texture for wavy effect
uniform float color_shift_speed = 1.0;  // Speed of the color shift

// Custom pixel size
uniform float pixel_size = 5.0;  // Size of the pixels (larger value = larger pixels)

// Function to get Bayer dither value
float get_dither(vec2 uv) {
    vec2 dither_uv = mod(uv / pixel_size, 4.0);  // Dithering based on pixel size
    int x = int(dither_uv.x);
    int y = int(dither_uv.y);

    // Flattened Bayer matrix pattern
    float bayer_matrix[16] = float[16](
        0.0,  8.0,  2.0, 10.0,
        12.0, 4.0, 14.0, 6.0,
        3.0, 11.0, 1.0,  9.0,
        15.0, 7.0, 13.0, 5.0
    );

    // Calculate index in flattened array
    int index = x + y * 4;
    return bayer_matrix[index] / 16.0;
}

void fragment() {
    vec2 uv = floor(FRAGCOORD.xy / pixel_size) * pixel_size / SCREEN_PIXEL_SIZE;  // Control pixelation by adjusting UVs
    vec2 noise_uv = uv * 0.5 + vec2(0.0, TIME * speed);  // Offset noise texture by time

    // Sample noise texture for smooth, wavy motion
    float noise_val = texture(noise_texture, noise_uv).r;

    // Generate wavy distortions for the aurora
    float wave = sin(uv.y * 10.0 + noise_val * intensity * 5.0) * 0.3 + 0.7;

    // Time-based color shifting effect
    float color_shift = (sin(TIME * color_shift_speed) + 1.0) * 0.5;  // Oscillates between 0 and 1

    // Interpolate between the colors based on the wave and time-based shift
    vec3 aurora_color = mix(color1.rgb, color2.rgb, wave);  // First blend between color1 and color2
    aurora_color = mix(aurora_color, color3.rgb, color_shift);  // Add time-based color shift with color3

    // Apply dithering effect
    float dither = get_dither(FRAGCOORD.xy);
    aurora_color = floor((aurora_color + dither) * 8.0) / 8.0;  // Reduce color precision for pixel art feel

    // Calculate the final alpha using the alpha of the blended colors
    float final_alpha = color1.a * (1.0 - wave) + color2.a * wave;  // Linear interpolation of alpha values
    final_alpha = mix(final_alpha, color3.a, color_shift);  // Blend with color3's alpha based on the time shift

    // Apply final color to the fragment, considering the alpha value
    COLOR = vec4(aurora_color, final_alpha);
}
"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 6 )
shader_param/speed = 1.0
shader_param/intensity = 3.0
shader_param/color1 = Color( 1, 0.796078, 0.592157, 1 )
shader_param/color2 = Color( 1, 0.658824, 0.333333, 1 )
shader_param/color3 = Color( 0.92549, 0.411765, 0, 1 )
shader_param/color_shift_speed = 1.0
shader_param/pixel_size = 5.0

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 6 )
shader_param/speed = 1.0
shader_param/intensity = 3.0
shader_param/color1 = Color( 0.0941176, 0.435294, 0.713726, 1 )
shader_param/color2 = Color( 0, 0.301961, 0.701961, 0 )
shader_param/color3 = Color( 0.92549, 0.411765, 0, 1 )
shader_param/color_shift_speed = 1.0
shader_param/pixel_size = 5.0

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 6 )
shader_param/speed = 1.0
shader_param/intensity = 3.0
shader_param/color1 = Color( 0.623529, 0, 0, 1 )
shader_param/color2 = Color( 0.0941176, 0.435294, 0.713726, 1 )
shader_param/color3 = Color( 0.92549, 0.411765, 0, 1 )
shader_param/color_shift_speed = 1.0
shader_param/pixel_size = 5.0
shader_param/noise_texture = ExtResource( 8 )

[node name="BahtStage" instance=ExtResource( 1 )]
level_index = 5
sky_color = Color( 0.74902, 0.74902, 0.74902, 1 )
boss_level = true
boss_name = "Bat"

[node name="SpawnPoint" parent="." index="1"]
position = Vector2( 132, 106 )

[node name="HypTextures" type="Node2D" parent="." index="7"]

[node name="Roads" type="CanvasLayer" parent="HypTextures" index="0"]

[node name="TextureRect" type="TextureRect" parent="HypTextures/Roads" index="0"]
pause_mode = 2
visible = false
modulate = Color( 1, 1, 1, 0.0980392 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 9 )
script = ExtResource( 10 )

[node name="TileMap" type="TileMap" parent="." index="8"]
z_index = 10
tile_set = SubResource( 5 )
cell_size = Vector2( 32, 32 )
format = 1
tile_data = PoolIntArray( -327689, 0, 0, -327688, 0, 1, -327687, 0, 0, -327686, 0, 1, -327685, 0, 0, -327684, 0, 1, -327683, 0, 0, -327682, 0, 1, -327681, 0, 0, -393216, 0, 1, -393215, 0, 0, -393214, 0, 1, -393213, 0, 0, -393212, 0, 1, -393211, 0, 0, -393210, 0, 1, -393209, 0, 0, -393208, 0, 1, -262153, 0, 65536, -262152, 0, 65537, -262151, 0, 65536, -262150, 0, 65537, -262149, 0, 65536, -262148, 0, 65537, -262147, 0, 65536, -262146, 0, 65537, -262145, 0, 65536, -327680, 0, 65537, -327679, 0, 65536, -327678, 0, 65537, -327677, 0, 65536, -327676, 0, 65537, -327675, 0, 65536, -327674, 0, 65537, -327673, 0, 65536, -327672, 0, 65537, -196617, 0, 0, -196616, 0, 1, -262137, 0, 0, -262136, 0, 1, -131081, 0, 65536, -131080, 0, 65537, -196601, 0, 65536, -196600, 0, 65537, -65545, 0, 0, -65544, 0, 1, -131065, 0, 0, -131064, 0, 1, -9, 0, 65536, -8, 0, 65537, -65529, 0, 65536, -65528, 0, 65537, 65527, 0, 0, 65528, 0, 1, 7, 0, 0, 8, 0, 1, 131063, 0, 65536, 131064, 0, 65537, 65543, 0, 65536, 65544, 0, 65537, 196599, 0, 0, 196600, 0, 1, 131079, 0, 0, 131080, 0, 1, 262135, 0, 65536, 262136, 0, 65537, 196615, 0, 65536, 196616, 0, 65537, 327671, 0, 0, 327672, 0, 1, 327673, 0, 0, 327674, 0, 1, 327675, 0, 0, 327676, 0, 1, 327677, 0, 0, 327678, 0, 1, 327679, 0, 0, 262144, 0, 1, 262145, 0, 0, 262146, 0, 1, 262147, 0, 0, 262148, 0, 1, 262149, 0, 0, 262150, 0, 1, 262151, 0, 0, 262152, 0, 1, 393207, 0, 65536, 393208, 0, 65537, 393209, 0, 65536, 393210, 0, 65537, 393211, 0, 65536, 393212, 0, 65537, 393213, 0, 65536, 393214, 0, 65537, 393215, 0, 65536, 327680, 0, 65537, 327681, 0, 65536, 327682, 0, 65537, 327683, 0, 65536, 327684, 0, 65537, 327685, 0, 65536, 327686, 0, 65537, 327687, 0, 65536, 327688, 0, 65537 )

[node name="LevelEvents" type="Node2D" parent="." index="9"]
script = ExtResource( 3 )

[node name="Tween" type="Tween" parent="LevelEvents" index="0"]

[node name="StartTimer" type="Timer" parent="LevelEvents" index="1"]
wait_time = 2.0
one_shot = true
autostart = true

[node name="Slimes" type="Node2D" parent="LevelEvents" index="2"]

[node name="WinTimer" type="Timer" parent="LevelEvents" index="3"]
wait_time = 3.0
one_shot = true

[node name="Pen15" parent="LevelEvents" index="4" instance=ExtResource( 16 )]
position = Vector2( 0, -193 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="." index="10"]

[node name="Sprite4" type="Sprite" parent="ParallaxBackground" index="0"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 10 )
position = Vector2( 0, -35 )
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 0, 0, 1237, 467 )

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground" index="1"]
motion_scale = Vector2( 0.8, 1 )

[node name="Sprite" type="Sprite" parent="ParallaxBackground/ParallaxLayer" index="0"]
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0, 0, 880, 117 )

[node name="Sprite2" type="Sprite" parent="ParallaxBackground" index="2"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 8 )
position = Vector2( 0, -35 )
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 0, 0, 1237, 467 )

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground" index="3"]
motion_scale = Vector2( 0.9, 1 )
motion_mirroring = Vector2( 880, 0 )

[node name="Sprite" type="Sprite" parent="ParallaxBackground/ParallaxLayer2" index="0"]
position = Vector2( 196, 213 )
texture = ExtResource( 4 )
region_enabled = true
region_rect = Rect2( 0, 0, 880, 487 )

[node name="Sonic-robo-blast-2-v22-1x" type="Sprite" parent="." index="11"]
position = Vector2( -357, 296 )
texture = ExtResource( 7 )

[node name="Sprite3" type="Sprite" parent="." index="12"]
modulate = Color( 1, 1, 1, 0 )
material = SubResource( 9 )
position = Vector2( 1, 70 )
z_index = 5
texture = ExtResource( 6 )
region_enabled = true
region_rect = Rect2( 0, 0, 1237, 467 )

[connection signal="timeout" from="LevelEvents/StartTimer" to="LevelEvents" method="_on_StartTimer_timeout"]
[connection signal="timeout" from="LevelEvents/WinTimer" to="LevelEvents" method="_on_WinTimer_timeout"]
